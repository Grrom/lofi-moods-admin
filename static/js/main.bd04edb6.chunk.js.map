{"version":3,"sources":["components/misc/loader.tsx","helpers/helpers.ts","assets/add.svg","assets/trash.svg","components/content/action-bar.tsx","assets/play.svg","assets/pause.svg","components/content/content-item.tsx","components/content/content.tsx","assets/hamburger.svg","components/sidebar/sidebar-item.tsx","assets/playlist.svg","assets/logout.svg","helpers/alert-helper.ts","components/sidebar/sidebar.tsx","components/navbar/navbar.tsx","api/authentication-helper.ts","components/login/login.tsx","App.tsx","api/firebase-helper.ts","reportWebVitals.ts","index.tsx"],"names":["MiniLoader","className","Loader","fireToast","icon","message","duration","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","fire","title","Helpers","errorAlert","textInputAlert","question","onConfirm","input","showCancelButton","then","value","isConfirmed","successAlert","confirmDialog","confirmButtonColor","getById","id","document","getElementById","inputGetter","getFirebaseError","error","errorMessage","code","substring","indexOf","length","getCookie","cname","name","ca","decodeURIComponent","cookie","split","i","c","charAt","ActionBar","show","selected","addMusic","search","deleteMoodFromState","useState","addingMusic","setAddingMusic","deletingMood","setDeletingMood","music","a","fireBaseHelper","addResponse","success","data","deleteMood","type","onChange","event","target","onClick","ActionButton","isLoading","text","trash","html","preConfirm","trim","owner","link","noempty","innerHTML","submit","mood","dateAdded","Timestamp","now","add","src","alt","ContentItem","deleteMe","deleting","setDeleting","isPlaying","setIsPlaying","buffering","setBuffering","musicItem","setMusicItem","play","playIcon","setPlayIcon","setDuration","played","setPlayed","reactPlayer","useRef","progressBarContainer","deleteMusic","editData","key","fail","idInDom","textContent","toString","updateMusic","updateResponse","current","newMusicItem","console","log","contentEditable","suppressContentEditableWarning","spellCheck","onBlur","ref","onBuffer","onBufferEnd","url","onStart","onError","onPlay","pause","onPause","controls","playing","loop","onProgress","progress","playedSeconds","onDuration","config","playerVars","height","width","vq","boundingClientRect","getBoundingClientRect","currentLocation","pageX","x","seekTo","borderRadius","transitionDuration","bgColor","completed","customLabel","Content","musicList","setMusicList","gettingMusic","setGettingMusic","searchString","setSearchString","filter","obj","useEffect","fetchMusic","musicResponse","undefined","getMusic","getList","arr","forEach","toLowerCase","includes","push","createItem","map","playList","item","SidebarItem","imagesrc","label","isSelected","showTimer","AlertHelper","SideBar","select","addMood","hideSidebar","gettingMoods","moods","moodsShown","setMoodsShown","_hideSidebar","currentValue","playlist","_moodsList","SidebarContainer","addMoodRes","moodsLister","logout","authenticationHelper","NavBar","hamburger","style","errorToast","infoToast","successToast","fileInputAlert","accept","inputAttributes","infoAlert","showLoading","AuthenticationHelper","firebaseInstance","auth","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","isAdmin","signOut","currentUser","getDoc","doc","collection","firestore","uid","userData","resetPassword","sendPasswordResetEmail","updateName","updateProfile","displayName","this","getAuth","updateCurrentUser","Login","updateAuth","showPassword","setShowPassword","rememberMe","setRememberMe","submitting","setSubmitting","username","expiry","Date","setDate","getDate","checked","submitLogin","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","addDoc","newlyAdded","response","deleteDoc","getDocs","querySnapshot","datas","fetchMoods","updateDoc","moodsRef","query","where","toDeleteId","docs","deleteCollection","collectionName","size","Promise","resolve","fetchedDoc","App","setSelected","setMoods","setGettingMoods","loggedIn","setLoggedIn","checkingLogin","setCheckingLogin","concat","moodsResponse","getMoods","onAuthStateChanged","isLoggedIn","checkLoggedIn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bd04edb6.chunk.js","sourcesContent":["import \"./misc.scss\";\n\nexport function MiniLoader() {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"mini-loader\" />\n    </div>\n  );\n}\n\nexport function Loader() {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"loader\" />\n    </div>\n  );\n}\n","import Swal, { SweetAlertIcon } from \"sweetalert2\";\n\ninterface fireToastProps {\n  message: string;\n  icon: SweetAlertIcon;\n  duration?: number;\n}\n\nfunction fireToast({ icon, message, duration }: fireToastProps) {\n  Swal.mixin({\n    toast: true,\n    position: \"top-end\",\n    showConfirmButton: false,\n    timer: duration ?? 3000,\n    timerProgressBar: true,\n\n    didOpen: (toast) => {\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n    },\n  }).fire({\n    icon: icon,\n    title: message,\n  });\n}\n\ninterface confirmDialogProps {\n  question: string;\n  onConfirm: () => void;\n  confirmButtonColor?: string;\n}\n\nexport default class Helpers {\n  static errorAlert = (message: string, duration?: number) => {\n    fireToast({\n      icon: \"error\",\n      message: message,\n      duration: duration,\n    });\n  };\n\n  static textInputAlert = (\n    question: string,\n    onConfirm: (value: any) => void\n  ) => {\n    Swal.fire({\n      icon: \"question\",\n      title: question,\n      input: \"text\",\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        onConfirm(value.value);\n      }\n    });\n  };\n\n  static successAlert = (message: string, duration?: number) => {\n    fireToast({\n      icon: \"success\",\n      message: message,\n      duration: duration,\n    });\n  };\n\n  static confirmDialog = ({\n    question,\n    onConfirm,\n    confirmButtonColor,\n  }: confirmDialogProps) => {\n    Swal.fire({\n      icon: \"question\",\n      title: question,\n      showCancelButton: true,\n      confirmButtonColor: confirmButtonColor ?? \"red\",\n    }).then((value) => {\n      if (value.isConfirmed) {\n        onConfirm();\n      }\n    });\n  };\n\n  static getById = (id: string) => {\n    return document.getElementById(id);\n  };\n  static inputGetter = (id: string) => {\n    return (document.getElementById(id) as HTMLInputElement)!.value;\n  };\n\n  static getFirebaseError = (error: any) => {\n    let errorMessage = (error as any).code;\n    return errorMessage.substring(\n      errorMessage.indexOf(\"/\") + 1,\n      errorMessage.length\n    );\n  };\n\n  static getCookie = (cname: string) => {\n    let name = cname + \"=\";\n    let decodedCookie = decodeURIComponent(document.cookie);\n    let ca = decodedCookie.split(\";\");\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) === \" \") {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return \"\";\n  };\n}\n","export default __webpack_public_path__ + \"static/media/add.776ab686.svg\";","export default __webpack_public_path__ + \"static/media/trash.592bd856.svg\";","import { useState } from \"react\";\nimport { MiniLoader } from \"../misc/loader\";\nimport Swal from \"sweetalert2\";\nimport Helpers from \"../../helpers/helpers\";\nimport { apiResponse, mood, music } from \"../../types/types\";\n\nimport add from \"../../assets/add.svg\";\nimport trash from \"../../assets/trash.svg\";\nimport { fireBaseHelper } from \"../../App\";\nimport { Timestamp } from \"@firebase/firestore\";\n\ninterface _props {\n  show: boolean;\n  selected?: mood;\n  addMusic: (music: music) => void;\n  deleteMoodFromState: (mood: mood) => void;\n  search: (input: string) => void;\n  playList: Array<music>;\n}\nexport default function ActionBar({\n  show,\n  selected,\n  addMusic,\n  search,\n  deleteMoodFromState,\n}: _props) {\n  const [addingMusic, setAddingMusic] = useState(false);\n  const [deletingMood, setDeletingMood] = useState(false);\n\n  async function submit(music: music) {\n    setAddingMusic(() => true);\n    let addResponse: apiResponse<music> = await fireBaseHelper.addMusic(music);\n    setAddingMusic(() => false);\n\n    if (addResponse.success) {\n      addMusic(addResponse.data!);\n      Helpers.successAlert(addResponse.message, 1000);\n    } else {\n      Helpers.errorAlert(addResponse.message, 1000);\n    }\n  }\n\n  async function deleteMood() {\n    setDeletingMood(() => true);\n\n    let deleteMood = await fireBaseHelper.deleteMood(selected);\n\n    if (deleteMood.success) {\n      deleteMoodFromState(selected);\n      Helpers.successAlert(deleteMood.message);\n    } else Helpers.errorAlert(deleteMood.message);\n\n    setDeletingMood(() => false);\n  }\n\n  function addMusicDialog() {\n    //TODO: support mobile view\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        '<span class=\"swal2-input-label\">Title</span>' +\n        '<input id=\"musicTitle\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Owner</span>' +\n        '<input id=\"musicOwner\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">link</span>' +\n        '<input id=\"musicLink\" class=\"swal2-input\"/>' +\n        '<div id=\"empty\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      preConfirm: () => {\n        let title = Helpers.inputGetter(\"musicTitle\").trim();\n        let owner = Helpers.inputGetter(\"musicOwner\").trim();\n        let link = Helpers.inputGetter(\"musicLink\").trim();\n\n        (Helpers.getById(\"musicTitle\") as HTMLInputElement).value = title;\n        (Helpers.getById(\"musicOwner\") as HTMLInputElement).value = owner;\n        (Helpers.getById(\"musicLink\") as HTMLInputElement).value = link;\n\n        title = title.trim();\n        owner = owner.trim();\n        link = link.trim();\n\n        let noempty = title.length > 0 && owner.length > 0 && link.length > 0;\n\n        if (!noempty)\n          Helpers.getById(\"empty\")!.innerHTML = \"Complete all fields\";\n        else Helpers.getById(\"empty\")!.innerHTML = \" \";\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          title: Helpers.inputGetter(\"musicTitle\"),\n          owner: Helpers.inputGetter(\"musicOwner\"),\n          link: Helpers.inputGetter(\"musicLink\"),\n          mood: selected,\n          dateAdded: Timestamp.now(),\n        });\n      }\n    });\n  }\n\n  return show ? (\n    <div className=\"action-bar\">\n      <span className=\"search-bar\">\n        <input\n          type=\"text\"\n          className=\"search-field\"\n          id=\"search-field\"\n          onChange={(event) => {\n            search(event.target.value);\n          }}\n        />\n        <div\n          className=\"action-button\"\n          title=\"Search\"\n          onClick={() =>\n            search(\n              (document.getElementById(\"search-field\") as HTMLInputElement)\n                .value\n            )\n          }\n        >\n          <h4>Search</h4>\n        </div>\n      </span>\n      <div className=\"action-button-container\">\n        <ActionButton\n          onClick={deleteMood}\n          isLoading={deletingMood}\n          text=\"Delete Mood\"\n          icon={trash}\n        />\n        <ActionButton\n          onClick={addMusicDialog}\n          isLoading={addingMusic}\n          text=\"Add\"\n          icon={add}\n        />\n      </div>\n    </div>\n  ) : (\n    <span></span>\n  );\n}\n\ninterface _actionButtonProps {\n  onClick: () => any;\n  isLoading: boolean;\n  text: string;\n  icon: string;\n}\nfunction ActionButton({ onClick, isLoading, text, icon }: _actionButtonProps) {\n  return (\n    <span\n      className=\"action-button\"\n      title={text}\n      onClick={() => {\n        onClick();\n      }}\n    >\n      {isLoading ? (\n        <MiniLoader />\n      ) : (\n        <img src={icon} alt={text} className=\"icon\" />\n      )}\n      <h4>{text} </h4>\n    </span>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/play.20181f97.svg\";","export default __webpack_public_path__ + \"static/media/pause.7eb12db0.svg\";","import { apiResponse, music, musicProps, id } from \"../../types/types\";\nimport { fireBaseHelper } from \"../../App\";\nimport { MiniLoader } from \"../misc/loader\";\nimport Helpers from \"../../helpers/helpers\";\nimport { useRef, useState } from \"react\";\nimport ProgressBar from \"@ramonak/react-progress-bar\";\n\nimport trash from \"../../assets/trash.svg\";\nimport play from \"../../assets/play.svg\";\nimport pause from \"../../assets/pause.svg\";\nimport ReactPlayer from \"react-player/youtube\";\nimport { Timestamp } from \"@firebase/firestore\";\n\ninterface _props {\n  music: music;\n  deleteMe: (id: id) => void;\n}\n\nexport default function ContentItem({ music, deleteMe }: _props) {\n  const [deleting, setDeleting] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [buffering, setBuffering] = useState(false);\n\n  const [musicItem, setMusicItem] = useState(music);\n  const [playIcon, setPlayIcon] = useState(play);\n\n  const [duration, setDuration] = useState(0);\n  const [played, setPlayed] = useState(0);\n\n  const reactPlayer = useRef(null);\n  const progressBarContainer = useRef(null);\n\n  async function deleteMusic() {\n    Helpers.confirmDialog({\n      question: \"Are you sure you want to delete this music?\",\n      onConfirm: async () => {\n        setDeleting(() => true);\n        let deleteMusic: apiResponse<any> = await fireBaseHelper.deleteMusic(\n          music\n        );\n        setDeleting(() => false);\n        if (deleteMusic.success) {\n          Helpers.successAlert(deleteMusic.message);\n          deleteMe(musicItem.id!);\n        } else {\n          Helpers.errorAlert(deleteMusic.message);\n        }\n      },\n      confirmButtonColor: \"red\",\n    });\n  }\n\n  async function editData(id: id, key: musicProps, value: string) {\n    let updateResponse: apiResponse<any> = await fireBaseHelper.updateMusic(\n      musicItem,\n      key,\n      value\n    );\n    let idInDom = `${key}-${musicItem[key as musicProps]}`;\n\n    value = value.trim();\n\n    function fail() {\n      Helpers.getById(idInDom)!.textContent =\n        musicItem[key as musicProps]!.toString();\n    }\n\n    if (musicItem[key as musicProps] === value) {\n      fail();\n    } else {\n      if (value.length <= 0) {\n        Helpers.errorAlert(\"Invalid input\", 1000);\n        fail();\n      } else {\n        if (updateResponse.success) {\n          Helpers.successAlert(\"Edited successfully\", 1000);\n          setMusicItem((current) => {\n            let newMusicItem = { ...current };\n            (newMusicItem[key as musicProps] as string) = value;\n            return newMusicItem;\n          });\n        } else {\n          Helpers.errorAlert(\"Failed to edit value\", 1000);\n          fail();\n        }\n      }\n    }\n  }\n  console.log(Timestamp.now());\n\n  return (\n    <div className=\"content-item\">\n      <div className=\"content-item-container\">\n        <div>\n          <h3\n            id={`title-${musicItem.title}`}\n            contentEditable\n            className=\"break-word subtle-hover-grow\"\n            suppressContentEditableWarning\n            spellCheck={false}\n            onBlur={(value) => {\n              editData(musicItem.id!, \"title\", value.target.textContent!);\n            }}\n          >\n            {musicItem.title}\n          </h3>\n          <h4\n            id={`owner-${musicItem.owner}`}\n            contentEditable\n            className=\"break-word subtle-hover-grow\"\n            suppressContentEditableWarning\n            spellCheck={false}\n            onBlur={(value) => {\n              editData(musicItem.id!, \"owner\", value.target.textContent!);\n            }}\n          >\n            {musicItem.owner}\n          </h4>\n          <small>\n            <h5\n              id={`link-${musicItem.link}`}\n              contentEditable\n              className=\"break-word subtle-hover-grow\"\n              suppressContentEditableWarning\n              spellCheck={false}\n              onBlur={(value) => {\n                editData(musicItem.id!, \"link\", value.target.textContent!);\n              }}\n            >\n              {musicItem.link}\n            </h5>\n          </small>\n        </div>\n        <div className=\"thumb-icon\">\n          <img\n            className=\"thumbnail\"\n            src={`https://i.ytimg.com/vi/${musicItem.link}/mqdefault.jpg`}\n            alt=\"thumbnail\"\n          />\n          <div className=\"icon-container\">\n            <div className=\"bg-red icon-button\" onClick={() => deleteMusic()}>\n              {deleting ? (\n                <MiniLoader />\n              ) : (\n                <img className=\"icon \" src={trash} alt=\"delete\" />\n              )}\n            </div>\n            <div\n              className=\"bg-green icon-button\"\n              onClick={() =>\n                buffering ? () => {} : setIsPlaying((current) => !current)\n              }\n            >\n              {buffering ? (\n                <MiniLoader />\n              ) : (\n                <img className=\"icon\" src={playIcon} alt=\"play\" />\n              )}\n            </div>\n          </div>\n        </div>\n        <ReactPlayer\n          ref={reactPlayer}\n          onBuffer={() => setBuffering(() => true)}\n          onBufferEnd={() => setBuffering(() => false)}\n          className=\"react-player\"\n          url={`https://www.youtube.com/watch?v=${musicItem.link}`}\n          onStart={() => {\n            // setBottomPreview('Now Playing: '+selectedTrack.title);\n            // checkAndSetBg(sauce);\n          }}\n          onError={() =>\n            Helpers.errorAlert(\n              \"something went wrong while fetching music make sure you added a valid link to the resource\"\n            )\n          }\n          onPlay={() => setPlayIcon(() => pause)}\n          onPause={() => setPlayIcon(() => play)}\n          controls={false}\n          playing={isPlaying}\n          loop={true}\n          onProgress={(progress) =>\n            setPlayed(() => (progress.playedSeconds / duration) * 100)\n          }\n          onDuration={(duration) => setDuration(() => duration)}\n          config={{\n            playerVars: {\n              height: \"144px\",\n              width: \"256px\",\n              vq: \"small\",\n            },\n          }}\n        />\n      </div>\n      {played > 0 ? (\n        <div\n          ref={progressBarContainer}\n          className=\"progress-bar-container\"\n          onClick={(event) => {\n            let boundingClientRect = (\n              progressBarContainer.current! as HTMLElement\n            ).getBoundingClientRect();\n\n            let width = boundingClientRect.width;\n\n            let currentLocation = event.pageX - boundingClientRect.x;\n\n            if (!buffering) {\n              (reactPlayer.current as any).seekTo(currentLocation / width);\n            }\n          }}\n        >\n          <ProgressBar\n            borderRadius=\"0 0 24px 0\"\n            transitionDuration=\"200\"\n            height=\"8px\"\n            bgColor=\"#11496c\"\n            className=\"progress-bar\"\n            completed={played}\n            customLabel=\" \"\n          />\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","import \"./content.scss\";\nimport ActionBar from \"./action-bar\";\nimport ContentItem from \"./content-item\";\nimport { useEffect, useState } from \"react\";\nimport { apiResponse, mood, music } from \"../../types/types\";\nimport { Loader } from \"../misc/loader\";\nimport { id } from \"../../types/types\";\nimport { fireBaseHelper } from \"../../App\";\nimport Helpers from \"../../helpers/helpers\";\n\ninterface _props {\n  selected?: mood;\n  deleteMoodFromState: (mood: mood) => void;\n}\n\nexport default function Content({ selected, deleteMoodFromState }: _props) {\n  const [musicList, setMusicList] = useState([] as Array<music>);\n  const [gettingMusic, setGettingMusic] = useState(true);\n  const [searchString, setSearchString] = useState(\"\");\n\n  useEffect(() => {\n    async function getMusic() {\n      setGettingMusic(() => true);\n      let musicResponse: apiResponse<Array<music>> =\n        await fireBaseHelper.fetchMusic(selected);\n\n      if (musicResponse.success) {\n        setMusicList(() => musicResponse.data!);\n      } else {\n        Helpers.errorAlert(musicResponse.message);\n      }\n      setGettingMusic(() => false);\n    }\n\n    if (selected !== undefined) {\n      getMusic();\n    }\n  }, [selected]);\n\n  function deleteMusic(id: id) {\n    setMusicList(() => musicList.filter((obj) => obj.id !== id));\n  }\n\n  function addMusic(music: music) {\n    setMusicList((current) => [music, ...current]);\n  }\n\n  const search = (input: string) => setSearchString(() => input);\n  function getList() {\n    let arr: JSX.Element[] = [];\n\n    if (searchString !== \"\") {\n      musicList.forEach((music) => {\n        if (\n          music.title\n            .trim()\n            .toLowerCase()\n            .includes(searchString.trim().toLowerCase())\n        ) {\n          arr.push(createItem(music));\n        }\n      });\n    } else {\n      arr = musicList.map((music) => createItem(music));\n    }\n    return arr;\n  }\n\n  function createItem(music: music) {\n    return <ContentItem key={music.id} music={music} deleteMe={deleteMusic} />;\n  }\n\n  function contentSwitch() {\n    if (selected !== undefined) {\n      return (\n        <div className=\"content-container\">\n          {gettingMusic ? (\n            <Loader />\n          ) : musicList.length > 0 ? (\n            getList().map((item: JSX.Element) => item)\n          ) : (\n            <h3 className=\"content-message\">There are no items in this list</h3>\n          )}\n        </div>\n      );\n    } else {\n      return <h3 className=\"content-message\">None selected</h3>;\n    }\n  }\n\n  return (\n    <div id=\"content\">\n      <ActionBar\n        show={selected !== undefined}\n        selected={selected}\n        addMusic={addMusic}\n        playList={musicList}\n        search={search}\n        deleteMoodFromState={deleteMoodFromState}\n      />\n      {contentSwitch()}\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/hamburger.2a7fc546.svg\";","interface _props {\n  imagesrc: string;\n  label: string;\n  isSelected: boolean;\n  onClick?: () => any;\n}\n\nexport default function SidebarItem({\n  imagesrc,\n  label,\n  isSelected,\n  onClick,\n}: _props) {\n  return (\n    <div\n      className={`sidebar-item ${isSelected ? \"active\" : \"\"}`}\n      onClick={() => (onClick ? onClick() : () => {})}\n    >\n      <img src={imagesrc} alt=\"icon\" className=\"icon\" />\n      <div className=\"label\">{label}</div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/playlist.8b5736a2.svg\";","export default __webpack_public_path__ + \"static/media/logout.a83622f9.svg\";","import Swal, { SweetAlertIcon } from \"sweetalert2\";\n\ninterface fireToastProps {\n  message: string;\n  icon: SweetAlertIcon;\n  duration?: number;\n  showTimer?: boolean;\n}\n\nfunction fireToast({ icon, message, duration, showTimer }: fireToastProps) {\n  Swal.mixin({\n    toast: true,\n    position: \"top-start\",\n    showConfirmButton: false,\n    timer: duration ?? 3000,\n    timerProgressBar: showTimer ?? true,\n\n    didOpen: (toast) => {\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n    },\n  }).fire({\n    icon: icon,\n    title: message,\n  });\n}\n\ninterface confirmDialogProps {\n  question: string;\n  onConfirm: () => void;\n  confirmButtonColor?: string;\n}\n\nexport default class AlertHelper {\n  static errorToast = (\n    message: string,\n    duration?: number,\n    showTimer?: boolean\n  ) => {\n    fireToast({\n      icon: \"error\",\n      message: message,\n      duration: duration,\n      showTimer: showTimer,\n    });\n  };\n\n  static infoToast = (message: string, duration?: number) => {\n    fireToast({\n      icon: \"info\",\n      message: message,\n      duration: duration,\n    });\n  };\n\n  static successToast = (message: string, duration?: number) => {\n    fireToast({\n      icon: \"success\",\n      message: message,\n      duration: duration,\n    });\n  };\n\n  static textInputAlert = (\n    question: string,\n    onConfirm: (value: any) => void\n  ) => {\n    Swal.fire({\n      icon: \"question\",\n      title: question,\n      input: \"text\",\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        onConfirm(value.value);\n      }\n    });\n  };\n\n  static fileInputAlert = (\n    question: string,\n    accept: string,\n    onConfirm: (value: any) => void\n  ) => {\n    Swal.fire({\n      title: question,\n      input: \"file\",\n      inputAttributes: {\n        accept: accept,\n      },\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        onConfirm(value.value);\n      }\n    });\n  };\n\n  static successAlert = (message: string) => {\n    Swal.fire({\n      icon: \"success\",\n      title: message,\n    });\n  };\n\n  static infoAlert = (message: string) => {\n    Swal.fire({\n      icon: \"info\",\n      title: message,\n    });\n  };\n\n  static showLoading = (message: string) => {\n    Swal.fire({\n      title: message,\n      didOpen: () => {\n        Swal.showLoading();\n      },\n    });\n  };\n\n  static confirmDialog = ({\n    question,\n    onConfirm,\n    confirmButtonColor,\n  }: confirmDialogProps) => {\n    Swal.fire({\n      icon: \"question\",\n      title: question,\n      showCancelButton: true,\n      confirmButtonColor: confirmButtonColor ?? \"red\",\n    }).then((value) => {\n      if (value.isConfirmed) {\n        onConfirm();\n      }\n    });\n  };\n}\n","import SidebarItem from \"./sidebar-item\";\nimport \"./sidebar.scss\";\nimport { useState } from \"react\";\nimport { mood } from \"../../types/types\";\nimport { MiniLoader } from \"../misc/loader\";\n\nimport playlist from \"../../assets/playlist.svg\";\nimport logout from \"../../assets/logout.svg\";\nimport add from \"../../assets/add.svg\";\nimport Helpers from \"../../helpers/helpers\";\nimport { authenticationHelper, fireBaseHelper } from \"../../App\";\nimport AlertHelper from \"../../helpers/alert-helper\";\n\ninterface _props {\n  selected?: mood;\n  select: (item: mood) => void;\n  addMood: (item: mood) => void;\n  hideSidebar?: () => void | null;\n  gettingMoods: boolean;\n  moods: Array<mood>;\n}\n\nexport default function SideBar({\n  selected,\n  select,\n  addMood,\n  hideSidebar,\n  gettingMoods,\n  moods,\n}: _props) {\n  const [moodsShown, setMoodsShown] = useState(false);\n\n  function _hideSidebar() {\n    try {\n      if (hideSidebar !== null) hideSidebar!();\n    } catch {}\n  }\n\n  function moodsLister() {\n    let _moodsList: Array<JSX.Element> = moods.map((mood) => (\n      <SidebarContainer\n        key={mood}\n        select={select}\n        _hideSidebar={_hideSidebar}\n        selected={selected}\n        mood={mood}\n      />\n    ));\n\n    _moodsList.push(\n      <span\n        key=\"addMood\"\n        onClick={() => {\n          Helpers.textInputAlert(\n            \"Enter the name of the mood\",\n            async (value) => {\n              if (value !== \"\") {\n                value = value.toLowerCase();\n                if (!moods.includes(value)) {\n                  let addMoodRes = await fireBaseHelper.addMood(value);\n\n                  if (addMoodRes.success) {\n                    Helpers.successAlert(addMoodRes.message);\n                    addMood(addMoodRes.data);\n                  } else {\n                    Helpers.errorAlert(addMoodRes.message);\n                  }\n                } else {\n                  Helpers.errorAlert(`${value} mood already exists`);\n                }\n              }\n            }\n          );\n        }}\n      >\n        <SidebarItem imagesrc={add} label=\"Add Mood\" isSelected={false} />\n      </span>\n    );\n    return _moodsList;\n  }\n\n  return (\n    <div id=\"sidebar\">\n      <span\n        onClick={() => setMoodsShown((currentValue) => !currentValue)}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Music\"\n          imagesrc={playlist}\n          isSelected={moodsShown}\n        />\n      </span>\n      {moodsShown ? (\n        gettingMoods ? (\n          <MiniLoader />\n        ) : (\n          <div className=\"moods-container\">{moodsLister()}</div>\n        )\n      ) : (\n        \"\"\n      )}\n      <SidebarItem\n        label=\"Logout\"\n        imagesrc={logout}\n        isSelected={false}\n        onClick={() =>\n          AlertHelper.confirmDialog({\n            question: \"Are you sure you want to logout?\",\n            onConfirm: () => {\n              authenticationHelper.logout();\n            },\n          })\n        }\n      />\n    </div>\n  );\n}\n\ninterface SidebarContainerProps {\n  select: (toSelect: mood) => void;\n  _hideSidebar: () => void;\n  selected?: mood;\n  mood: mood;\n}\n\nfunction SidebarContainer({\n  select,\n  _hideSidebar,\n  selected,\n  mood,\n}: SidebarContainerProps) {\n  return (\n    <span\n      onClick={() => {\n        select(mood);\n        _hideSidebar();\n      }}\n      className=\"sidebar-item-container\"\n    >\n      <SidebarItem\n        label={mood!}\n        imagesrc={playlist}\n        isSelected={selected === mood}\n      />\n    </span>\n  );\n}\n","import \"./navbar.scss\";\nimport hamburger from \"../../assets/hamburger.svg\";\nimport SideBar from \"../sidebar/sidebar\";\nimport Helpers from \"../../helpers/helpers\";\nimport { mood } from \"../../types/types\";\n\ninterface _props {\n  select: (item: mood) => void;\n  selected?: mood;\n  addMood: (item: mood) => void;\n  gettingMoods: boolean;\n  moods: Array<mood>;\n}\n\nexport default function NavBar({\n  select,\n  selected,\n  moods,\n  addMood,\n  gettingMoods,\n}: _props) {\n  function showSidebar() {\n    Helpers.getById(\"sidebar\")!.style.width = \"80vw\";\n    Helpers.getById(\"overlay\")!.style.width = \"100vw\";\n  }\n\n  function hideSidebar() {\n    Helpers.getById(\"sidebar\")!.style.width = \"0vw\";\n    Helpers.getById(\"overlay\")!.style.width = \"0vw\";\n  }\n\n  return (\n    <div id=\"navbar\">\n      <h2>Lofi Moods Dashboard</h2>\n      <img\n        src={hamburger}\n        title=\"nav\"\n        alt=\"nav\"\n        className=\"icon clickable hamburger\"\n        onClick={() => showSidebar()}\n      />\n      <div id=\"overlay\" onClick={() => hideSidebar()}></div>\n      <SideBar\n        selected={selected}\n        select={select}\n        moods={moods}\n        addMood={addMood}\n        gettingMoods={gettingMoods}\n      />\n    </div>\n  );\n}\n","import { FirebaseApp } from \"@firebase/app\";\nimport {\n  Auth,\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  sendPasswordResetEmail,\n  updateProfile,\n  updateCurrentUser,\n  signOut,\n} from \"firebase/auth\";\nimport { collection, doc, getDoc } from \"firebase/firestore\";\nimport { fireBaseHelper } from \"../App\";\nimport AlertHelper from \"../helpers/alert-helper\";\nimport Helpers from \"../helpers/helpers\";\n\nexport default class AuthenticationHelper {\n  auth: Auth;\n\n  public signup = (email: string, password: string) => {\n    return createUserWithEmailAndPassword(this.auth, email, password);\n  };\n\n  public login = async (email: string, password: string) => {\n    await signInWithEmailAndPassword(this.auth, email, password);\n    return this.isAdmin();\n  };\n\n  public logout = () => {\n    signOut(this.auth);\n  };\n\n  public isAdmin = async () => {\n    if (this.auth.currentUser !== null) {\n      let userData = (\n        await getDoc(\n          doc(\n            collection(fireBaseHelper.firestore, \"users\"),\n            this.auth.currentUser.uid\n          )\n        )\n      ).data();\n\n      if (userData !== undefined && userData[\"isAdmin\"] !== true) {\n        AlertHelper.infoAlert(\n          \"Sorry, This account does not have admin privileges, Please contact a super admin to request admin access.\"\n        );\n        signOut(this.auth);\n        return false;\n      }\n      return userData !== undefined && userData[\"isAdmin\"] === true;\n    } else {\n      console.log(\"no user\");\n      return false;\n    }\n  };\n\n  public resetPassword = (email: string) => {\n    return sendPasswordResetEmail(this.auth, email);\n  };\n\n  public updateName = (name: string) => {\n    return updateProfile(this.auth.currentUser!, { displayName: name });\n  };\n\n  public triggerUpdate() {\n    return updateCurrentUser(this.auth, this.auth.currentUser);\n  }\n\n  constructor(firebaseInstance: FirebaseApp) {\n    this.auth = getAuth(firebaseInstance);\n    // document.cookie = `rememberAdmin=; expires=${new Date()}`;\n    console.log(\"hehe\");\n    console.log(Helpers.getCookie(\"rememberAdmin\"));\n    // signOut(this.auth);\n    if (Helpers.getCookie(\"rememberAdmin\") !== \"true\") {\n      signOut(this.auth);\n    }\n  }\n}\n","import { useState } from \"react\";\nimport { authenticationHelper } from \"../../App\";\nimport AlertHelper from \"../../helpers/alert-helper\";\nimport Helpers from \"../../helpers/helpers\";\nimport { MiniLoader } from \"../misc/loader\";\nimport \"./login.scss\";\n\nexport default function Login({ updateAuth }: { updateAuth: () => void }) {\n  const [showPassword, setShowPassword] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n\n  async function submitLogin() {\n    setSubmitting(() => true);\n    let username = Helpers.inputGetter(\"username\");\n    let password = Helpers.inputGetter(\"password\");\n\n    let noempty = username.length > 0 && password.length > 0;\n\n    if (noempty) {\n      try {\n        let loginResult = await authenticationHelper.login(username, password);\n        if (loginResult) {\n          setSubmitting(() => false);\n          AlertHelper.successToast(\"Logged in successfully!\");\n          if (rememberMe) {\n            let expiry = new Date();\n            expiry.setDate(expiry.getDate() + 30);\n            document.cookie = `rememberAdmin=true; expires=${expiry}; SameSite=Lax`;\n          } else {\n            document.cookie = `rememberAdmin=false; expires=${new Date()}; SameSite=Lax`;\n          }\n          updateAuth();\n        }\n      } catch (e) {\n        AlertHelper.errorToast(\n          `Failed to sign in: ${Helpers.getFirebaseError(e)}`\n        );\n        setSubmitting(() => false);\n      }\n    } else {\n      AlertHelper.infoToast(\"Please Fill All Fields.\");\n      setSubmitting(() => false);\n    }\n  }\n\n  return (\n    <div id=\"login\">\n      <div className=\"login-form\">\n        <h1 className=\"login-title\">Admin Login</h1>\n        <div className=\"form\">\n          <h4 className=\"label\">Email</h4>\n          <input id=\"username\" type=\"email\" className=\"swal2-input input\" />\n          <h4 className=\"label\">Password</h4>\n          <input\n            id=\"password\"\n            className=\"swal2-input input\"\n            type={showPassword ? \"text\" : \"password\"}\n          />\n\n          <div className=\"checkbox\">\n            <strong className=\"label\">Show Password</strong>\n            <input\n              className=\"input\"\n              type=\"checkbox\"\n              onChange={(value) => {\n                setShowPassword(() => value.target.checked);\n              }}\n            />\n          </div>\n\n          <div className=\"checkbox\">\n            <strong className=\"label\">Remember Me</strong>\n            <input\n              className=\"input\"\n              type=\"checkbox\"\n              onChange={(value) => setRememberMe(() => value.target.checked)}\n            />\n          </div>\n\n          <div className=\"login-button\" onClick={() => submitLogin()}>\n            {submitting ? (\n              <h3>\n                <MiniLoader />\n              </h3>\n            ) : (\n              <h3>LOGIN</h3>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport \"./App.scss\";\nimport Content from \"./components/content/content\";\nimport NavBar from \"./components/navbar/navbar\";\nimport SideBar from \"./components/sidebar/sidebar\";\nimport { initializeApp } from \"firebase/app\";\nimport FireBaseHelper from \"./api/firebase-helper\";\nimport { mood } from \"./types/types\";\nimport Helpers from \"./helpers/helpers\";\nimport AuthenticationHelper from \"./api/authentication-helper\";\nimport Login from \"./components/login/login\";\nimport { Loader } from \"./components/misc/loader\";\n\ninitializeApp({\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n});\n\nexport const authenticationHelper = new AuthenticationHelper(\n  initializeApp({\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n  })\n);\n\nexport const fireBaseHelper = new FireBaseHelper();\n\nexport default function App() {\n  const [selected, setSelected] = useState(undefined as mood | undefined);\n  const [moods, setMoods] = useState([] as Array<mood>);\n\n  const [gettingMoods, setGettingMoods] = useState(false);\n\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [checkingLogin, setCheckingLogin] = useState(true);\n\n  const select = (item: mood) => setSelected(() => item);\n  const addMood = (item: mood) => setMoods((current) => current.concat(item));\n  const deleteMood = (item: mood) => {\n    setMoods(() => moods.filter((obj) => obj !== item));\n    select(undefined);\n  };\n\n  useEffect(() => {\n    async function getMoods() {\n      setGettingMoods(() => true);\n      let moodsResponse = await fireBaseHelper.fetchMoods();\n      if (moodsResponse.success) {\n        setMoods(() => moodsResponse.data!);\n      } else {\n        Helpers.errorAlert(moodsResponse.message);\n      }\n      setGettingMoods(() => false);\n    }\n\n    if (loggedIn) getMoods();\n  }, [loggedIn]);\n\n  useEffect(() => {\n    async function checkLoggedIn() {\n      authenticationHelper.auth.onAuthStateChanged(async () => {\n        let isLoggedIn = await authenticationHelper.isAdmin();\n        setLoggedIn(() => isLoggedIn);\n        setCheckingLogin(() => false);\n      });\n    }\n\n    checkLoggedIn();\n  }, []);\n\n  if (checkingLogin) {\n    return (\n      <div>\n        <Loader />\n      </div>\n    );\n  }\n\n  if (loggedIn) {\n    return (\n      <div id=\"app\">\n        <NavBar\n          selected={selected}\n          select={select}\n          moods={moods}\n          addMood={addMood}\n          gettingMoods={gettingMoods}\n        />\n        <main>\n          <SideBar\n            selected={selected}\n            select={select}\n            moods={moods}\n            addMood={addMood}\n            gettingMoods={gettingMoods}\n          />\n          <Content selected={selected} deleteMoodFromState={deleteMood} />\n        </main>\n      </div>\n    );\n  } else {\n    return <Login updateAuth={() => setLoggedIn(() => true)} />;\n  }\n}\n","import {\n  collection,\n  addDoc,\n  doc,\n  deleteDoc,\n  getDocs,\n  where,\n  query,\n  updateDoc,\n} from \"firebase/firestore\";\n\nimport { getFirestore } from \"firebase/firestore\";\nimport { apiResponse, mood, music, musicProps } from \"../types/types\";\n\nexport default class FireBaseHelper {\n  firestore = getFirestore();\n\n  public addMusic = async (music: music): Promise<apiResponse<music>> => {\n    let response;\n    try {\n      let newlyAdded = await addDoc(\n        collection(this.firestore, music.mood!),\n        music\n      );\n\n      response = {\n        message: `${music.title} added succesfully`,\n        success: true,\n        data: { id: newlyAdded.id, ...music },\n      };\n    } catch (e) {\n      response = {\n        message: `failed to add ${music.title}`,\n        success: false,\n      };\n    }\n    return response;\n  };\n\n  public deleteMusic = async (\n    music: music\n  ): Promise<apiResponse<undefined>> => {\n    try {\n      let ref = collection(this.firestore, music.mood!);\n      await deleteDoc(doc(ref, music.id));\n      return {\n        message: `${music.title} deleted succesfully`,\n        success: true,\n      };\n    } catch (e) {\n      return {\n        message: `Failed to delete ${music.title}: ${e}`,\n        success: false,\n      };\n    }\n  };\n\n  public fetchMusic = async (\n    mood: mood\n  ): Promise<apiResponse<Array<music>>> => {\n    try {\n      const querySnapshot = await getDocs(collection(this.firestore, mood!));\n      let datas: Array<music> = [];\n      querySnapshot.forEach((doc) => {\n        let data = doc.data();\n        data.id = doc.id;\n        datas.push(data as music);\n      });\n\n      return {\n        message: `${mood} music fetched`,\n        success: true,\n        data: datas,\n      };\n    } catch (e) {\n      return {\n        message: `Failed to fetch music: ${e}`,\n        success: false,\n      };\n    }\n  };\n\n  public fetchMoods = async (): Promise<apiResponse<Array<mood>>> => {\n    try {\n      const querySnapshot = await getDocs(collection(this.firestore, \"moods\"));\n      let datas: Array<string> = [];\n      querySnapshot.forEach((doc) => {\n        let data = doc.data();\n        datas.push(data.name);\n      });\n\n      return {\n        message: \"Moods fetched\",\n        success: true,\n        data: datas,\n      };\n    } catch (e) {\n      return {\n        message: `Failed to fetch Moods: ${e}`,\n        success: false,\n      };\n    }\n  };\n\n  public updateMusic = async (\n    music: music,\n    key: musicProps,\n    value: string\n  ): Promise<apiResponse<undefined>> => {\n    try {\n      await updateDoc(doc(collection(this.firestore, music.mood!), music.id), {\n        [key]: value,\n      });\n      return {\n        message: `${music.title} updated succesfully`,\n        success: true,\n      };\n    } catch (e) {\n      return {\n        message: `Failed to update ${music.title}: ${e}`,\n        success: false,\n      };\n    }\n  };\n\n  public deleteMood = async (mood: mood): Promise<apiResponse<undefined>> => {\n    try {\n      const moodsRef = collection(this.firestore, \"moods\");\n      const toDeleteId = (\n        await getDocs(query(moodsRef, where(\"name\", \"==\", mood)))\n      ).docs[0].id;\n\n      await deleteDoc(doc(moodsRef, toDeleteId));\n\n      this.deleteCollection(mood!);\n      this.deleteCollection(`${mood}_chatroom`);\n\n      return {\n        message: `${mood} successfully deleted`,\n        success: true,\n      };\n    } catch (e) {\n      return {\n        message: `Failed to delete ${mood}: ${e}`,\n        success: false,\n      };\n    }\n  };\n\n  public addMood = async (mood: mood): Promise<apiResponse<mood>> => {\n    try {\n      await addDoc(collection(this.firestore, \"moods\"), { name: mood });\n\n      return {\n        message: `${mood} successfully added`,\n        success: true,\n        data: mood,\n      };\n    } catch (e) {\n      return {\n        message: `Failed to add ${mood}: ${e} `,\n        success: false,\n      };\n    }\n  };\n\n  private deleteCollection = async (collectionName: string) => {\n    try {\n      const querySnapshot = await getDocs(\n        collection(this.firestore, collectionName!)\n      );\n      if (querySnapshot.size > 0) {\n        await new Promise((resolve) =>\n          querySnapshot.forEach(async (fetchedDoc) => {\n            await deleteDoc(\n              doc(collection(this.firestore, collectionName!), fetchedDoc.id)\n            );\n            resolve(true);\n          })\n        );\n      }\n\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}