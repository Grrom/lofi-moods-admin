{"version":3,"sources":["components/misc/loader.tsx","helpers/helpers.ts","assets/add.svg","assets/trash.svg","components/content/action-bar.tsx","assets/play.svg","assets/pause.svg","components/content/content-item.tsx","components/content/content.tsx","assets/hamburger.svg","components/sidebar/sidebar-item.tsx","assets/playlist.svg","components/sidebar/sidebar.tsx","components/navbar/navbar.tsx","App.tsx","api/firebase-helper.ts","reportWebVitals.ts","index.tsx"],"names":["MiniLoader","className","Loader","fireToast","icon","message","duration","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","fire","title","Helpers","errorAlert","textInputAlert","question","onConfirm","input","showCancelButton","then","value","isConfirmed","successAlert","confirmDialog","confirmButtonColor","getById","id","document","getElementById","inputGetter","ActionBar","show","selected","addMusic","search","deleteMoodFromState","useState","addingMusic","setAddingMusic","deletingMood","setDeletingMood","music","a","fireBaseHelper","addResponse","success","data","deleteMood","type","onChange","event","target","onClick","ActionButton","isLoading","text","trash","html","preConfirm","trim","owner","link","noempty","length","innerHTML","submit","mood","dateAdded","Timestamp","now","add","src","alt","ContentItem","deleteMe","deleting","setDeleting","isPlaying","setIsPlaying","buffering","setBuffering","musicItem","setMusicItem","play","playIcon","setPlayIcon","setDuration","played","setPlayed","reactPlayer","useRef","progressBarContainer","deleteMusic","editData","key","fail","idInDom","textContent","toString","updateMusic","updateResponse","current","newMusicItem","console","log","contentEditable","suppressContentEditableWarning","spellCheck","onBlur","ref","onBuffer","onBufferEnd","url","onStart","onError","onPlay","pause","onPause","controls","playing","loop","onProgress","progress","playedSeconds","onDuration","config","playerVars","height","width","vq","boundingClientRect","getBoundingClientRect","currentLocation","pageX","x","seekTo","borderRadius","transitionDuration","bgColor","completed","customLabel","Content","musicList","setMusicList","gettingMusic","setGettingMusic","searchString","setSearchString","filter","obj","useEffect","fetchMusic","musicResponse","undefined","getMusic","getList","arr","forEach","toLowerCase","includes","push","createItem","map","playList","item","SidebarItem","imagesrc","label","isSelected","SideBar","select","addMood","hideSidebar","gettingMoods","moods","moodsShown","setMoodsShown","_hideSidebar","currentValue","playlist","_moodsList","SidebarContainer","addMoodRes","moodsLister","NavBar","hamburger","style","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","getFirestore","addDoc","collection","newlyAdded","response","deleteDoc","doc","getDocs","querySnapshot","datas","fetchMoods","name","updateDoc","moodsRef","query","where","toDeleteId","docs","deleteCollection","collectionName","size","Promise","resolve","fetchedDoc","App","setSelected","setMoods","setGettingMoods","concat","moodsResponse","getMoods","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3cbd0fdf.chunk.js","sourcesContent":["import \"./misc.scss\";\n\nexport function MiniLoader() {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"mini-loader\" />\n    </div>\n  );\n}\n\nexport function Loader() {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"loader\" />\n    </div>\n  );\n}\n","import Swal, { SweetAlertIcon } from \"sweetalert2\";\n\ninterface fireToastProps {\n  message: string;\n  icon: SweetAlertIcon;\n  duration?: number;\n}\n\nfunction fireToast({ icon, message, duration }: fireToastProps) {\n  Swal.mixin({\n    toast: true,\n    position: \"top-end\",\n    showConfirmButton: false,\n    timer: duration ?? 3000,\n    timerProgressBar: true,\n\n    didOpen: (toast) => {\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n    },\n  }).fire({\n    icon: icon,\n    title: message,\n  });\n}\n\ninterface confirmDialogProps {\n  question: string;\n  onConfirm: () => void;\n  confirmButtonColor?: string;\n}\n\nexport default class Helpers {\n  static errorAlert = (message: string, duration?: number) => {\n    fireToast({\n      icon: \"error\",\n      message: message,\n      duration: duration,\n    });\n  };\n\n  static textInputAlert = (\n    question: string,\n    onConfirm: (value: any) => void\n  ) => {\n    Swal.fire({\n      icon: \"question\",\n      title: question,\n      input: \"text\",\n      showCancelButton: true,\n    }).then((value) => {\n      if (value.isConfirmed) {\n        onConfirm(value.value);\n      }\n    });\n  };\n\n  static successAlert = (message: string, duration?: number) => {\n    fireToast({\n      icon: \"success\",\n      message: message,\n      duration: duration,\n    });\n  };\n\n  static confirmDialog = ({\n    question,\n    onConfirm,\n    confirmButtonColor,\n  }: confirmDialogProps) => {\n    Swal.fire({\n      icon: \"question\",\n      title: question,\n      showCancelButton: true,\n      confirmButtonColor: confirmButtonColor ?? \"red\",\n    }).then((value) => {\n      if (value.isConfirmed) {\n        onConfirm();\n      }\n    });\n  };\n\n  static getById = (id: string) => {\n    return document.getElementById(id);\n  };\n  static inputGetter = (id: string) => {\n    return (document.getElementById(id) as HTMLInputElement)!.value;\n  };\n}\n","export default __webpack_public_path__ + \"static/media/add.776ab686.svg\";","export default __webpack_public_path__ + \"static/media/trash.592bd856.svg\";","import { useState } from \"react\";\nimport { MiniLoader } from \"../misc/loader\";\nimport Swal from \"sweetalert2\";\nimport Helpers from \"../../helpers/helpers\";\nimport { apiResponse, mood, music } from \"../../types/types\";\n\nimport add from \"../../assets/add.svg\";\nimport trash from \"../../assets/trash.svg\";\nimport { fireBaseHelper } from \"../../App\";\nimport { Timestamp } from \"@firebase/firestore\";\n\ninterface _props {\n  show: boolean;\n  selected?: mood;\n  addMusic: (music: music) => void;\n  deleteMoodFromState: (mood: mood) => void;\n  search: (input: string) => void;\n  playList: Array<music>;\n}\nexport default function ActionBar({\n  show,\n  selected,\n  addMusic,\n  search,\n  deleteMoodFromState,\n}: _props) {\n  const [addingMusic, setAddingMusic] = useState(false);\n  const [deletingMood, setDeletingMood] = useState(false);\n\n  async function submit(music: music) {\n    setAddingMusic(() => true);\n    let addResponse: apiResponse<music> = await fireBaseHelper.addMusic(music);\n    setAddingMusic(() => false);\n\n    if (addResponse.success) {\n      addMusic(addResponse.data!);\n      Helpers.successAlert(addResponse.message, 1000);\n    } else {\n      Helpers.errorAlert(addResponse.message, 1000);\n    }\n  }\n\n  async function deleteMood() {\n    setDeletingMood(() => true);\n\n    let deleteMood = await fireBaseHelper.deleteMood(selected);\n\n    if (deleteMood.success) {\n      deleteMoodFromState(selected);\n      Helpers.successAlert(deleteMood.message);\n    } else Helpers.errorAlert(deleteMood.message);\n\n    setDeletingMood(() => false);\n  }\n\n  function addMusicDialog() {\n    //TODO: support mobile view\n    Swal.fire({\n      title: \"Enter Details\",\n      html:\n        '<span class=\"swal2-input-label\">Title</span>' +\n        '<input id=\"musicTitle\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">Owner</span>' +\n        '<input id=\"musicOwner\" class=\"swal2-input\">' +\n        '<span class=\"swal2-input-label\">link</span>' +\n        '<input id=\"musicLink\" class=\"swal2-input\"/>' +\n        '<div id=\"empty\" class=\"error-text\"> </div>',\n      showCancelButton: true,\n      preConfirm: () => {\n        let title = Helpers.inputGetter(\"musicTitle\").trim();\n        let owner = Helpers.inputGetter(\"musicOwner\").trim();\n        let link = Helpers.inputGetter(\"musicLink\").trim();\n\n        (Helpers.getById(\"musicTitle\") as HTMLInputElement).value = title;\n        (Helpers.getById(\"musicOwner\") as HTMLInputElement).value = owner;\n        (Helpers.getById(\"musicLink\") as HTMLInputElement).value = link;\n\n        title = title.trim();\n        owner = owner.trim();\n        link = link.trim();\n\n        let noempty = title.length > 0 && owner.length > 0 && link.length > 0;\n\n        if (!noempty)\n          Helpers.getById(\"empty\")!.innerHTML = \"Complete all fields\";\n        else Helpers.getById(\"empty\")!.innerHTML = \" \";\n\n        return noempty;\n      },\n    }).then((value) => {\n      if (value.isConfirmed) {\n        submit({\n          title: Helpers.inputGetter(\"musicTitle\"),\n          owner: Helpers.inputGetter(\"musicOwner\"),\n          link: Helpers.inputGetter(\"musicLink\"),\n          mood: selected,\n          dateAdded: Timestamp.now(),\n        });\n      }\n    });\n  }\n\n  return show ? (\n    <div className=\"action-bar\">\n      <span className=\"search-bar\">\n        <input\n          type=\"text\"\n          className=\"search-field\"\n          id=\"search-field\"\n          onChange={(event) => {\n            search(event.target.value);\n          }}\n        />\n        <div\n          className=\"action-button\"\n          title=\"Search\"\n          onClick={() =>\n            search(\n              (document.getElementById(\"search-field\") as HTMLInputElement)\n                .value\n            )\n          }\n        >\n          <h4>Search</h4>\n        </div>\n      </span>\n      <div className=\"action-button-container\">\n        <ActionButton\n          onClick={deleteMood}\n          isLoading={deletingMood}\n          text=\"Delete Mood\"\n          icon={trash}\n        />\n        <ActionButton\n          onClick={addMusicDialog}\n          isLoading={addingMusic}\n          text=\"Add\"\n          icon={add}\n        />\n      </div>\n    </div>\n  ) : (\n    <span></span>\n  );\n}\n\ninterface _actionButtonProps {\n  onClick: () => any;\n  isLoading: boolean;\n  text: string;\n  icon: string;\n}\nfunction ActionButton({ onClick, isLoading, text, icon }: _actionButtonProps) {\n  return (\n    <span\n      className=\"action-button\"\n      title={text}\n      onClick={() => {\n        onClick();\n      }}\n    >\n      {isLoading ? (\n        <MiniLoader />\n      ) : (\n        <img src={icon} alt={text} className=\"icon\" />\n      )}\n      <h4>{text} </h4>\n    </span>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/play.20181f97.svg\";","export default __webpack_public_path__ + \"static/media/pause.7eb12db0.svg\";","import { apiResponse, music, musicProps, id } from \"../../types/types\";\nimport { fireBaseHelper } from \"../../App\";\nimport { MiniLoader } from \"../misc/loader\";\nimport Helpers from \"../../helpers/helpers\";\nimport { useRef, useState } from \"react\";\nimport ProgressBar from \"@ramonak/react-progress-bar\";\n\nimport trash from \"../../assets/trash.svg\";\nimport play from \"../../assets/play.svg\";\nimport pause from \"../../assets/pause.svg\";\nimport ReactPlayer from \"react-player/youtube\";\nimport { Timestamp } from \"@firebase/firestore\";\n\ninterface _props {\n  music: music;\n  deleteMe: (id: id) => void;\n}\n\nexport default function ContentItem({ music, deleteMe }: _props) {\n  const [deleting, setDeleting] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [buffering, setBuffering] = useState(false);\n\n  const [musicItem, setMusicItem] = useState(music);\n  const [playIcon, setPlayIcon] = useState(play);\n\n  const [duration, setDuration] = useState(0);\n  const [played, setPlayed] = useState(0);\n\n  const reactPlayer = useRef(null);\n  const progressBarContainer = useRef(null);\n\n  async function deleteMusic() {\n    Helpers.confirmDialog({\n      question: \"Are you sure you want to delete this music?\",\n      onConfirm: async () => {\n        setDeleting(() => true);\n        let deleteMusic: apiResponse<any> = await fireBaseHelper.deleteMusic(\n          music\n        );\n        setDeleting(() => false);\n        if (deleteMusic.success) {\n          Helpers.successAlert(deleteMusic.message);\n          deleteMe(musicItem.id!);\n        } else {\n          Helpers.errorAlert(deleteMusic.message);\n        }\n      },\n      confirmButtonColor: \"red\",\n    });\n  }\n\n  async function editData(id: id, key: musicProps, value: string) {\n    let updateResponse: apiResponse<any> = await fireBaseHelper.updateMusic(\n      musicItem,\n      key,\n      value\n    );\n    let idInDom = `${key}-${musicItem[key as musicProps]}`;\n\n    value = value.trim();\n\n    function fail() {\n      Helpers.getById(idInDom)!.textContent =\n        musicItem[key as musicProps]!.toString();\n    }\n\n    if (musicItem[key as musicProps] === value) {\n      fail();\n    } else {\n      if (value.length <= 0) {\n        Helpers.errorAlert(\"Invalid input\", 1000);\n        fail();\n      } else {\n        if (updateResponse.success) {\n          Helpers.successAlert(\"Edited successfully\", 1000);\n          setMusicItem((current) => {\n            let newMusicItem = { ...current };\n            (newMusicItem[key as musicProps] as string) = value;\n            return newMusicItem;\n          });\n        } else {\n          Helpers.errorAlert(\"Failed to edit value\", 1000);\n          fail();\n        }\n      }\n    }\n  }\n  console.log(Timestamp.now());\n\n  return (\n    <div className=\"content-item\">\n      <div className=\"content-item-container\">\n        <div>\n          <h3\n            id={`title-${musicItem.title}`}\n            contentEditable\n            className=\"break-word subtle-hover-grow\"\n            suppressContentEditableWarning\n            spellCheck={false}\n            onBlur={(value) => {\n              editData(musicItem.id!, \"title\", value.target.textContent!);\n            }}\n          >\n            {musicItem.title}\n          </h3>\n          <h4\n            id={`owner-${musicItem.owner}`}\n            contentEditable\n            className=\"break-word subtle-hover-grow\"\n            suppressContentEditableWarning\n            spellCheck={false}\n            onBlur={(value) => {\n              editData(musicItem.id!, \"owner\", value.target.textContent!);\n            }}\n          >\n            {musicItem.owner}\n          </h4>\n          <small>\n            <h5\n              id={`link-${musicItem.link}`}\n              contentEditable\n              className=\"break-word subtle-hover-grow\"\n              suppressContentEditableWarning\n              spellCheck={false}\n              onBlur={(value) => {\n                editData(musicItem.id!, \"link\", value.target.textContent!);\n              }}\n            >\n              {musicItem.link}\n            </h5>\n          </small>\n        </div>\n        <div className=\"thumb-icon\">\n          <img\n            className=\"thumbnail\"\n            src={`https://i.ytimg.com/vi/${musicItem.link}/mqdefault.jpg`}\n            alt=\"thumbnail\"\n          />\n          <div className=\"icon-container\">\n            <div className=\"bg-red icon-button\" onClick={() => deleteMusic()}>\n              {deleting ? (\n                <MiniLoader />\n              ) : (\n                <img className=\"icon \" src={trash} alt=\"delete\" />\n              )}\n            </div>\n            <div\n              className=\"bg-green icon-button\"\n              onClick={() =>\n                buffering ? () => {} : setIsPlaying((current) => !current)\n              }\n            >\n              {buffering ? (\n                <MiniLoader />\n              ) : (\n                <img className=\"icon\" src={playIcon} alt=\"play\" />\n              )}\n            </div>\n          </div>\n        </div>\n        <ReactPlayer\n          ref={reactPlayer}\n          onBuffer={() => setBuffering(() => true)}\n          onBufferEnd={() => setBuffering(() => false)}\n          className=\"react-player\"\n          url={`https://www.youtube.com/watch?v=${musicItem.link}`}\n          onStart={() => {\n            // setBottomPreview('Now Playing: '+selectedTrack.title);\n            // checkAndSetBg(sauce);\n          }}\n          onError={() =>\n            Helpers.errorAlert(\n              \"something went wrong while fetching music make sure you added a valid link to the resource\"\n            )\n          }\n          onPlay={() => setPlayIcon(() => pause)}\n          onPause={() => setPlayIcon(() => play)}\n          controls={false}\n          playing={isPlaying}\n          loop={true}\n          onProgress={(progress) =>\n            setPlayed(() => (progress.playedSeconds / duration) * 100)\n          }\n          onDuration={(duration) => setDuration(() => duration)}\n          config={{\n            playerVars: {\n              height: \"144px\",\n              width: \"256px\",\n              vq: \"small\",\n            },\n          }}\n        />\n      </div>\n      {played > 0 ? (\n        <div\n          ref={progressBarContainer}\n          className=\"progress-bar-container\"\n          onClick={(event) => {\n            let boundingClientRect = (\n              progressBarContainer.current! as HTMLElement\n            ).getBoundingClientRect();\n\n            let width = boundingClientRect.width;\n\n            let currentLocation = event.pageX - boundingClientRect.x;\n\n            if (!buffering) {\n              (reactPlayer.current as any).seekTo(currentLocation / width);\n            }\n          }}\n        >\n          <ProgressBar\n            borderRadius=\"0 0 24px 0\"\n            transitionDuration=\"200\"\n            height=\"8px\"\n            bgColor=\"#11496c\"\n            className=\"progress-bar\"\n            completed={played}\n            customLabel=\" \"\n          />\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n","import \"./content.scss\";\nimport ActionBar from \"./action-bar\";\nimport ContentItem from \"./content-item\";\nimport { useEffect, useState } from \"react\";\nimport { apiResponse, mood, music } from \"../../types/types\";\nimport { Loader } from \"../misc/loader\";\nimport { id } from \"../../types/types\";\nimport { fireBaseHelper } from \"../../App\";\nimport Helpers from \"../../helpers/helpers\";\n\ninterface _props {\n  selected?: mood;\n  deleteMoodFromState: (mood: mood) => void;\n}\n\nexport default function Content({ selected, deleteMoodFromState }: _props) {\n  const [musicList, setMusicList] = useState([] as Array<music>);\n  const [gettingMusic, setGettingMusic] = useState(true);\n  const [searchString, setSearchString] = useState(\"\");\n\n  useEffect(() => {\n    async function getMusic() {\n      setGettingMusic(() => true);\n      let musicResponse: apiResponse<Array<music>> =\n        await fireBaseHelper.fetchMusic(selected);\n\n      if (musicResponse.success) {\n        setMusicList(() => musicResponse.data!);\n      } else {\n        Helpers.errorAlert(musicResponse.message);\n      }\n      setGettingMusic(() => false);\n    }\n\n    if (selected !== undefined) {\n      getMusic();\n    }\n  }, [selected]);\n\n  function deleteMusic(id: id) {\n    setMusicList(() => musicList.filter((obj) => obj.id !== id));\n  }\n\n  function addMusic(music: music) {\n    setMusicList((current) => [music, ...current]);\n  }\n\n  const search = (input: string) => setSearchString(() => input);\n  function getList() {\n    let arr: JSX.Element[] = [];\n\n    if (searchString !== \"\") {\n      musicList.forEach((music) => {\n        if (\n          music.title\n            .trim()\n            .toLowerCase()\n            .includes(searchString.trim().toLowerCase())\n        ) {\n          arr.push(createItem(music));\n        }\n      });\n    } else {\n      arr = musicList.map((music) => createItem(music));\n    }\n    return arr;\n  }\n\n  function createItem(music: music) {\n    return <ContentItem key={music.id} music={music} deleteMe={deleteMusic} />;\n  }\n\n  function contentSwitch() {\n    if (selected !== undefined) {\n      return (\n        <div className=\"content-container\">\n          {gettingMusic ? (\n            <Loader />\n          ) : musicList.length > 0 ? (\n            getList().map((item: JSX.Element) => item)\n          ) : (\n            <h3 className=\"content-message\">There are no items in this list</h3>\n          )}\n        </div>\n      );\n    } else {\n      return <h3 className=\"content-message\">None selected</h3>;\n    }\n  }\n\n  return (\n    <div id=\"content\">\n      <ActionBar\n        show={selected !== undefined}\n        selected={selected}\n        addMusic={addMusic}\n        playList={musicList}\n        search={search}\n        deleteMoodFromState={deleteMoodFromState}\n      />\n      {contentSwitch()}\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/hamburger.2a7fc546.svg\";","interface _props {\n  imagesrc: string;\n  label: string;\n  isSelected: boolean;\n}\n\nexport default function SidebarItem({ imagesrc, label, isSelected }: _props) {\n  return (\n    <div className={`sidebar-item ${isSelected ? \"active\" : \"\"}`}>\n      <img src={imagesrc} alt=\"icon\" className=\"icon\" />\n      <div className=\"label\">{label}</div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/playlist.8b5736a2.svg\";","import SidebarItem from \"./sidebar-item\";\nimport \"./sidebar.scss\";\nimport { useState } from \"react\";\nimport { mood } from \"../../types/types\";\nimport { MiniLoader } from \"../misc/loader\";\n\nimport playlist from \"../../assets/playlist.svg\";\nimport add from \"../../assets/add.svg\";\nimport Helpers from \"../../helpers/helpers\";\nimport { fireBaseHelper } from \"../../App\";\n\ninterface _props {\n  selected?: mood;\n  select: (item: mood) => void;\n  addMood: (item: mood) => void;\n  hideSidebar?: () => void | null;\n  gettingMoods: boolean;\n  moods: Array<mood>;\n}\n\nexport default function SideBar({\n  selected,\n  select,\n  addMood,\n  hideSidebar,\n  gettingMoods,\n  moods,\n}: _props) {\n  const [moodsShown, setMoodsShown] = useState(false);\n\n  function _hideSidebar() {\n    try {\n      if (hideSidebar !== null) hideSidebar!();\n    } catch {}\n  }\n\n  function moodsLister() {\n    let _moodsList: Array<JSX.Element> = moods.map((mood) => (\n      <SidebarContainer\n        key={mood}\n        select={select}\n        _hideSidebar={_hideSidebar}\n        selected={selected}\n        mood={mood}\n      />\n    ));\n\n    _moodsList.push(\n      <span\n        key=\"addMood\"\n        onClick={() => {\n          Helpers.textInputAlert(\n            \"Enter the name of the mood\",\n            async (value) => {\n              if (value !== \"\") {\n                value = value.toLowerCase();\n                if (!moods.includes(value)) {\n                  let addMoodRes = await fireBaseHelper.addMood(value);\n\n                  if (addMoodRes.success) {\n                    Helpers.successAlert(addMoodRes.message);\n                    addMood(addMoodRes.data);\n                  } else {\n                    Helpers.errorAlert(addMoodRes.message);\n                  }\n                } else {\n                  Helpers.errorAlert(`${value} mood already exists`);\n                }\n              }\n            }\n          );\n        }}\n      >\n        <SidebarItem imagesrc={add} label=\"Add Mood\" isSelected={false} />\n      </span>\n    );\n    return _moodsList;\n  }\n\n  return (\n    <div id=\"sidebar\">\n      <span\n        onClick={() => setMoodsShown((currentValue) => !currentValue)}\n        className=\"sidebar-item-container\"\n      >\n        <SidebarItem\n          label=\"Music\"\n          imagesrc={playlist}\n          isSelected={moodsShown}\n        />\n      </span>\n      {moodsShown ? (\n        gettingMoods ? (\n          <MiniLoader />\n        ) : (\n          <div className=\"moods-container\">{moodsLister()}</div>\n        )\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\ninterface SidebarContainerProps {\n  select: (toSelect: mood) => void;\n  _hideSidebar: () => void;\n  selected?: mood;\n  mood: mood;\n}\n\nfunction SidebarContainer({\n  select,\n  _hideSidebar,\n  selected,\n  mood,\n}: SidebarContainerProps) {\n  return (\n    <span\n      onClick={() => {\n        select(mood);\n        _hideSidebar();\n      }}\n      className=\"sidebar-item-container\"\n    >\n      <SidebarItem\n        label={mood!}\n        imagesrc={playlist}\n        isSelected={selected === mood}\n      />\n    </span>\n  );\n}\n","import \"./navbar.scss\";\nimport hamburger from \"../../assets/hamburger.svg\";\nimport SideBar from \"../sidebar/sidebar\";\nimport Helpers from \"../../helpers/helpers\";\nimport { mood } from \"../../types/types\";\n\ninterface _props {\n  select: (item: mood) => void;\n  selected?: mood;\n  addMood: (item: mood) => void;\n  gettingMoods: boolean;\n  moods: Array<mood>;\n}\n\nexport default function NavBar({\n  select,\n  selected,\n  moods,\n  addMood,\n  gettingMoods,\n}: _props) {\n  function showSidebar() {\n    Helpers.getById(\"sidebar\")!.style.width = \"80vw\";\n    Helpers.getById(\"overlay\")!.style.width = \"100vw\";\n  }\n\n  function hideSidebar() {\n    Helpers.getById(\"sidebar\")!.style.width = \"0vw\";\n    Helpers.getById(\"overlay\")!.style.width = \"0vw\";\n  }\n\n  return (\n    <div id=\"navbar\">\n      <h2>Lofi Moods Dashboard</h2>\n      <img\n        src={hamburger}\n        title=\"nav\"\n        alt=\"nav\"\n        className=\"icon clickable hamburger\"\n        onClick={() => showSidebar()}\n      />\n      <div id=\"overlay\" onClick={() => hideSidebar()}></div>\n      <SideBar\n        selected={selected}\n        select={select}\n        moods={moods}\n        addMood={addMood}\n        gettingMoods={gettingMoods}\n      />\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport \"./App.scss\";\nimport Content from \"./components/content/content\";\nimport NavBar from \"./components/navbar/navbar\";\nimport SideBar from \"./components/sidebar/sidebar\";\nimport { initializeApp } from \"firebase/app\";\nimport FireBaseHelper from \"./api/firebase-helper\";\nimport { mood } from \"./types/types\";\nimport Helpers from \"./helpers/helpers\";\n\ninitializeApp({\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n});\n\nexport const fireBaseHelper = new FireBaseHelper();\n\nexport default function App() {\n  const [selected, setSelected] = useState(undefined as mood | undefined);\n  const [moods, setMoods] = useState([] as Array<mood>);\n\n  const [gettingMoods, setGettingMoods] = useState(false);\n\n  const select = (item: mood) => setSelected(() => item);\n  const addMood = (item: mood) => setMoods((current) => current.concat(item));\n  const deleteMood = (item: mood) => {\n    setMoods(() => moods.filter((obj) => obj !== item));\n    select(undefined);\n  };\n\n  useEffect(() => {\n    async function getMoods() {\n      setGettingMoods(() => true);\n      let moodsResponse = await fireBaseHelper.fetchMoods();\n      if (moodsResponse.success) {\n        setMoods(() => moodsResponse.data!);\n      } else {\n        Helpers.errorAlert(moodsResponse.message);\n      }\n      setGettingMoods(() => false);\n    }\n\n    getMoods();\n  }, []);\n\n  return (\n    <div id=\"app\">\n      <NavBar\n        selected={selected}\n        select={select}\n        moods={moods}\n        addMood={addMood}\n        gettingMoods={gettingMoods}\n      />\n      <main>\n        <SideBar\n          selected={selected}\n          select={select}\n          moods={moods}\n          addMood={addMood}\n          gettingMoods={gettingMoods}\n        />\n        <Content selected={selected} deleteMoodFromState={deleteMood} />\n      </main>\n    </div>\n  );\n}\n","import {\n  collection,\n  addDoc,\n  doc,\n  deleteDoc,\n  getDocs,\n  where,\n  query,\n  updateDoc,\n} from \"firebase/firestore\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { apiResponse, mood, music, musicProps } from \"../types/types\";\n\nexport default class FireBaseHelper {\n  firestore = getFirestore();\n\n  public addMusic = async (music: music): Promise<apiResponse<music>> => {\n    let response;\n    try {\n      let newlyAdded = await addDoc(collection(this.firestore, music.mood!), {\n        music,\n      });\n\n      response = {\n        message: `${music.title} added succesfully`,\n        success: true,\n        data: { id: newlyAdded.id, ...music },\n      };\n    } catch (e) {\n      response = {\n        message: `failed to add ${music.title}`,\n        success: false,\n      };\n    }\n    return response;\n  };\n\n  public deleteMusic = async (\n    music: music\n  ): Promise<apiResponse<undefined>> => {\n    try {\n      let ref = collection(this.firestore, music.mood!);\n      await deleteDoc(doc(ref, music.id));\n      return {\n        message: `${music.title} deleted succesfully`,\n        success: true,\n      };\n    } catch (e) {\n      return {\n        message: `Failed to delete ${music.title}: ${e}`,\n        success: false,\n      };\n    }\n  };\n\n  public fetchMusic = async (\n    mood: mood\n  ): Promise<apiResponse<Array<music>>> => {\n    try {\n      const querySnapshot = await getDocs(collection(this.firestore, mood!));\n      let datas: Array<music> = [];\n      querySnapshot.forEach((doc) => {\n        let data = doc.data();\n        data.id = doc.id;\n        datas.push(data as music);\n      });\n\n      return {\n        message: `${mood} music fetched`,\n        success: true,\n        data: datas,\n      };\n    } catch (e) {\n      return {\n        message: `Failed to fetch music: ${e}`,\n        success: false,\n      };\n    }\n  };\n\n  public fetchMoods = async (): Promise<apiResponse<Array<mood>>> => {\n    try {\n      const querySnapshot = await getDocs(collection(this.firestore, \"moods\"));\n      let datas: Array<string> = [];\n      querySnapshot.forEach((doc) => {\n        let data = doc.data();\n        datas.push(data.name);\n      });\n\n      return {\n        message: \"Moods fetched\",\n        success: true,\n        data: datas,\n      };\n    } catch (e) {\n      return {\n        message: `Failed to fetch Moods: ${e}`,\n        success: false,\n      };\n    }\n  };\n\n  public updateMusic = async (\n    music: music,\n    key: musicProps,\n    value: string\n  ): Promise<apiResponse<undefined>> => {\n    try {\n      await updateDoc(doc(collection(this.firestore, music.mood!), music.id), {\n        [key]: value,\n      });\n      return {\n        message: `${music.title} updated succesfully`,\n        success: true,\n      };\n    } catch (e) {\n      return {\n        message: `Failed to update ${music.title}: ${e}`,\n        success: false,\n      };\n    }\n  };\n\n  public deleteMood = async (mood: mood): Promise<apiResponse<undefined>> => {\n    try {\n      const moodsRef = collection(this.firestore, \"moods\");\n      const toDeleteId = (\n        await getDocs(query(moodsRef, where(\"name\", \"==\", mood)))\n      ).docs[0].id;\n\n      await deleteDoc(doc(moodsRef, toDeleteId));\n\n      this.deleteCollection(mood!);\n      this.deleteCollection(`${mood}_chatroom`);\n\n      return {\n        message: `${mood} successfully deleted`,\n        success: true,\n      };\n    } catch (e) {\n      return {\n        message: `Failed to delete ${mood}: ${e}`,\n        success: false,\n      };\n    }\n  };\n\n  public addMood = async (mood: mood): Promise<apiResponse<mood>> => {\n    try {\n      await addDoc(collection(this.firestore, \"moods\"), { name: mood });\n\n      return {\n        message: `${mood} successfully added`,\n        success: true,\n        data: mood,\n      };\n    } catch (e) {\n      return {\n        message: `Failed to add ${mood}: ${e} `,\n        success: false,\n      };\n    }\n  };\n\n  private deleteCollection = async (collectionName: string) => {\n    try {\n      const querySnapshot = await getDocs(\n        collection(this.firestore, collectionName!)\n      );\n      if (querySnapshot.size > 0) {\n        await new Promise((resolve) =>\n          querySnapshot.forEach(async (fetchedDoc) => {\n            await deleteDoc(\n              doc(collection(this.firestore, collectionName!), fetchedDoc.id)\n            );\n            resolve(true);\n          })\n        );\n      }\n\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}